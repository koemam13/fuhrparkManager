/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import data.Car;
import dialogWindows.AddDialog;
import dialogWindows.EditDialog;
import java.awt.Dimension;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.nio.file.Path;
import java.util.List;
import java.util.logging.Level;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import org.apache.log4j.Logger;
import tableModel.tableModel;


/**
 *
 * @author imperatus
 */
public class MainGui extends javax.swing.JFrame
{
  private final tableModel model = new tableModel();
  

  
  static File f;
  static int rv;
  
  /**
   * Creates new form MainGui
   */
  public MainGui ()
  {
    initComponents();
    jtCars.setModel(model);
    setMinimumSize(new Dimension(1500, 200));
   
  }


  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
   * content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints;

    jPanel1 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    jtCars = new javax.swing.JTable();
    jPanel2 = new javax.swing.JPanel();
    jPanel3 = new javax.swing.JPanel();
    jbAdd = new javax.swing.JButton();
    jbDel = new javax.swing.JButton();
    jPanel4 = new javax.swing.JPanel();
    jbEdit = new javax.swing.JButton();
    jPanel5 = new javax.swing.JPanel();
    jbDetails = new javax.swing.JButton();
    jbMakeDetails = new javax.swing.JButton();
    jMenuBar1 = new javax.swing.JMenuBar();
    jMenu1 = new javax.swing.JMenu();
    jmSave = new javax.swing.JMenuItem();
    jmRefresh = new javax.swing.JMenuItem();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jPanel1.setLayout(new java.awt.BorderLayout());

    jtCars.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][]
      {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String []
      {
        "Title 1", "Title 2", "Title 3", "Title 4"
      }
    ));
    jtCars.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        jtCarsMouseClicked(evt);
      }
    });
    jScrollPane1.setViewportView(jtCars);

    jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

    getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

    jPanel2.setLayout(new java.awt.GridLayout(1, 0));

    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Hinzufügen o. Löschen"));
    jPanel3.setLayout(new java.awt.GridBagLayout());

    jbAdd.setText("Hinzufügen");
    jbAdd.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbAddActionPerformed(evt);
      }
    });
    jPanel3.add(jbAdd, new java.awt.GridBagConstraints());

    jbDel.setText("Löschen");
    jbDel.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbDelActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel3.add(jbDel, gridBagConstraints);

    jPanel2.add(jPanel3);

    jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Bearbeiten"));
    jPanel4.setLayout(new java.awt.GridBagLayout());

    jbEdit.setText("Bearbeiten");
    jbEdit.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jbEditActionPerformed(evt);
      }
    });
    jPanel4.add(jbEdit, new java.awt.GridBagConstraints());

    jPanel2.add(jPanel4);

    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Details anzeigen"));
    jPanel5.setLayout(new java.awt.GridBagLayout());

    jbDetails.setText("Details anzeigen");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    jPanel5.add(jbDetails, gridBagConstraints);

    jbMakeDetails.setText("Details hinzufügen");
    jPanel5.add(jbMakeDetails, new java.awt.GridBagConstraints());

    jPanel2.add(jPanel5);

    getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

    jMenu1.setText("Datei");

    jmSave.setText("Speichern");
    jmSave.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        jmSaveActionPerformed(evt);
      }
    });
    jMenu1.add(jmSave);

    jmRefresh.setText("Aktualisieren");
    jMenu1.add(jmRefresh);

    jMenuBar1.add(jMenu1);

    setJMenuBar(jMenuBar1);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jbAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbAddActionPerformed
  {//GEN-HEADEREND:event_jbAddActionPerformed
    double baum = 300.0; 
    
    AddDialog dlg = new AddDialog(this,true);
      dlg.setMinimumSize(new Dimension(400, 400));
      dlg.setTitle("Eingabefenster");
      dlg.setVisible(true);
      if (!dlg.isPressedOK()) {
      return;
      }
      Car c = new Car(dlg.getName(), dlg.getId(), dlg.getKostenstelle(), dlg.getKm(), dlg.getFirstRegistration(), dlg.getlInspection(), dlg.getnInspection(), dlg.getlService(), dlg.getnService(), baum);
      model.add(c);
  }//GEN-LAST:event_jbAddActionPerformed

  private void jbEditActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbEditActionPerformed
  {//GEN-HEADEREND:event_jbEditActionPerformed
    double baum = 300.0;
    
    try
    {
      if(model.getRowCount()==0)
        throw new Exception("Keine Zeilen vorhanden!");
      
       int index =jtCars.getSelectedRow();
      
   
   Car c = model.getCar(index);
   EditDialog dlg = new EditDialog(this, true);
   dlg.setTF(c);
   dlg.setMinimumSize(new Dimension(400, 400));
   dlg.setTitle("Bearbeiten...");
   dlg.setVisible(true);
   if (!dlg.isPressedOK()) {
      return;
      }
   Car c2 = dlg.getCar();
   model.set(index, c2);
    }
    catch (Exception ex)
    {
      JOptionPane.showMessageDialog(this, ex.getMessage(), "Fehler aufgetreten", JOptionPane.ERROR_MESSAGE);
    }
   
  }//GEN-LAST:event_jbEditActionPerformed

  private void jmSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jmSaveActionPerformed
  {//GEN-HEADEREND:event_jmSaveActionPerformed
    try (BufferedWriter w = new BufferedWriter(new FileWriter(f+File.separator+"save.dat"))) {
        model.write(w);
      } catch (Exception ex) {
        ex.printStackTrace(System.err);
        JOptionPane.showMessageDialog(this, "Datei kann nicht geschrieben werden",
                                            "Fehler", 
                                            JOptionPane.ERROR_MESSAGE);
      }    // TODO add your handling code here:
  }//GEN-LAST:event_jmSaveActionPerformed

  private void jbDelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jbDelActionPerformed
  {//GEN-HEADEREND:event_jbDelActionPerformed
    int index =jtCars.getSelectedRow();
    
    model.remove(index);
  }//GEN-LAST:event_jbDelActionPerformed

  private void jtCarsMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jtCarsMouseClicked
  {//GEN-HEADEREND:event_jtCarsMouseClicked
// TODO add your handling code here:
  }//GEN-LAST:event_jtCarsMouseClicked

  
  private File openFile(){
    File ez = null;
          JFileChooser chooser = new JFileChooser();
          chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
          
       
      FileNameExtensionFilter filter = new FileNameExtensionFilter(
      "Bitte das Server Verzeichnis auswählen.", "csv");
    chooser.setFileFilter(filter);
     int showSaveDialog;
     showSaveDialog = chooser.showSaveDialog(null);
    
    return ez = chooser.getSelectedFile();
  }
  
  private void readFile(BufferedReader r)
  {try
    {
      model.read(r);
    }
    catch (Exception e)
    {
      JOptionPane.showMessageDialog(this, e.getMessage(), "Fehler aufgetreten", JOptionPane.ERROR_MESSAGE);
      System.err.print(e);
      e.printStackTrace(System.out);
      
    }
    
  }

  /**
   * @param args the command line arguments
   */
  public static void main (String args[]) throws IOException, ClassNotFoundException
  {
   
    
    

    
    
    /*
     * Set the Nimbus look and feel
     */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel. For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try
    {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
      {
        if ("Nimbus".equals(info.getName()))
        {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    }
    catch (ClassNotFoundException ex)
    {
      java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (InstantiationException ex)
    {
      java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (IllegalAccessException ex)
    {
      java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    catch (javax.swing.UnsupportedLookAndFeelException ex)
    {
      java.util.logging.Logger.getLogger(MainGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /*
     * Create and display the form
     */
    java.awt.EventQueue.invokeLater(new Runnable()
    {
      public void run ()
      {
        MainGui main = new MainGui();
        main.setVisible(true);
        
             String s = null;
    try
    {
      File test = new File(".");
      
      s = test.getAbsolutePath();
      
      s = s.replace(".", "");
      
      test.delete();
      
      System.out.println(s);
    }
    catch (Exception e)
    {
    }
    
    if(s!=null)
    {
      
    File root = new File(s +File.separator+ "test.dat");
    if(root.exists())
    {
      
      try
      {
        String p = null;
        
        BufferedReader r = new BufferedReader(new FileReader(root));
        
        p = r.readLine();
        
        f = new File(p);
        
        
        File x = new File(p + File.separator + "save.dat");
        if (x.exists())
        {
          
          main.readFile(new BufferedReader(new FileReader(x)));
        }
      }
      catch (IOException iOException)
      {
        JOptionPane.showMessageDialog(null, iOException.getCause(), "Fehler aufgetreten", JOptionPane.ERROR_MESSAGE);
      }
    }
    if(!root.exists())
    {
      try
      {
      
        File x = main.openFile();
        
        File i = new File(s + File.separator + "test.dat");
        
        BufferedWriter w = new BufferedWriter(new FileWriter(i));
        
        
        w.write(x.getAbsolutePath());
        w.newLine();
        w.flush();
        
        File p = new File(x.getAbsolutePath()+File.separator+"save.dat") ;
        System.out.println(p.getAbsolutePath() + "     " + p.getName());
        if(p.exists())
          main.readFile(new BufferedReader(new FileReader(p)));
      }
      catch (IOException iOException)
      {
      }
    }
    }
        
        
      }
    });
    

    
    
    
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JMenu jMenu1;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JPanel jPanel5;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JButton jbAdd;
  private javax.swing.JButton jbDel;
  private javax.swing.JButton jbDetails;
  private javax.swing.JButton jbEdit;
  private javax.swing.JButton jbMakeDetails;
  private javax.swing.JMenuItem jmRefresh;
  private javax.swing.JMenuItem jmSave;
  private javax.swing.JTable jtCars;
  // End of variables declaration//GEN-END:variables

}
